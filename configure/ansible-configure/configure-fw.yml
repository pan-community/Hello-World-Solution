- name: configure_ngfw
  hosts: all
  connection: local
  gather_facts: False

  collections:
    - paloaltonetworks.panos
    - pan_community.skillet

  vars:
    provider:
      ip_address: '{{ ip_address }}'
      username: '{{ username }}'
      password: '{{ password }}'

  tasks:
    # currently using clear text vars for testing
    #- name: grab auth creds
    #  include_vars: vars/main.yml

    - name: Ensure deps are available
      # Ensure we have all the right requirements installed in this environment
      pip:
        name:
          - pan-python
          - pan-os-python
          - xmltodict
          - requests
          - requests_toolbelt
          - skilletlib

    # check access to the system and pull a few values
    - name: show system info
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show system info'
      register: system_info
      until: system_info is not failed
      retries: 10
      delay: 10

    # json to dict to use in multiple places
    - set_fact: system_info_json="{{ system_info.stdout | from_json }}"

    # output software version for min version check
    - name: software version
      debug: msg='software version is {{ system_info_json.response.result.system['sw-version'] }}'

    # stop playbook if sw version before 10.0
    # configuration is 10.0.x specific
    - name: firewall version check
      fail: msg="stop - NGFW sw version must be 10.0.0 or later"
      when: system_info_json.response.result.system['sw-version'] is version('10.0.0', '<')

    # check serial number; may be used in vm-series testing as licensing check
    - name: serial number
      debug: msg='serial number is {{ system_info_json.response.result.system.serial }}'

    # stop playbook if no serial number found
    - name: firewall without a serial number
      fail: msg="stop - VM-series firewall missing serial number and unlicensed"
      when: system_info_json.response.result.system.serial == 'Unknown'

    # play the named skillet to configure fw elements
    - name: play cdl global config skillet
      pan_community.skillet.panos_skillet:
        skillet_path: '{{ playbook_dir }}'
        skillet: 'panos_layer3_config_group_v10'
        provider: '{{ provider }}'
        vars: '{{ skillet_vars }}'
      register: skillet_output

    # output of config push
    - name: dump test output
      debug:
        msg: '{{ skillet_output }}'

    #- name: commit config
    #  panos_commit_firewall:
    #    provider: '{{ provider }}'
