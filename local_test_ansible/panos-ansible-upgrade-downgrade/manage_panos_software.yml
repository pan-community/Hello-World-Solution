- hosts: all
  connection: local
  gather_facts: false

  vars:
    auth_code: 'your valid VM Auth-Code if unlicensed'

    provider:
      ip_address: '{{ ip_address }}'
      username: '{{ username }}'
      password: '{{ password }}'

    pb_version: 0.4

  collections:
    - paloaltonetworks.panos

  tasks:
    - name: Include User Variables
      include_vars: vars/main.yml

    - name: Debug Input Vars
      debug:
        msg: "Provider is: {{ provider }}"

    - name: "Initiating Upgrade / Downgrade Tool"
      debug:
        msg: "Initiating Upgrade / Downgrade Tool Version: {{ pb_version }}"

    - name: Ensure deps are avabilable
      # Ensure we have all the right requirements installed in this environment
      pip:
        name:
          - pan-python
          - pandevice
          - xmltodict
          - requests
          - requests_toolbelt

    - name: Wait for Device Online
      # Best practice is to always wait for device online at start of playbook
      # as these tasks will get called repeatedly, they are added as handlers that
      # get included
      command: echo "Waiting for device online"
      notify: "reboot"

    - name: Wait for Online Handler
      meta: flush_handlers

    - name: "Debug Parameters"
      debug:
        msg: "Upgrade / Downgrade called with parameters: {{ sw_version }} -> {{ desired_version }}"

    - name: Activate my authcode
      # This firewall must be licensed to pull dynamic content and software updates
      panos_lic:
        provider: '{{ provider }}'
        auth_code: '{{ auth_code }}'
      register: activate_authcode

    - name: Pause for Service Restart
      pause:
        seconds: 180
      when: activate_authcode.changed
      notify: "reboot"

    - name: Wait for Service Restart Handler
      meta: flush_handlers

    - name: Install latest Dynamic Updates
      include_tasks: tasks/content_updates.yml
      when: (
        ( force_update_content == 'yes' ) or
        ( update_content == 'yes' and (desired_major != current_major))
        )

    - name: Install latest Anti-Virus Updates
      include_tasks: tasks/antivirus_updates.yml
      when: update_av == 'yes'

    - name: Kicking off Upgrade / Downgrade Plan
      include_tasks: tasks/install_panos_version.yml
      loop: '{{ version_sequence }}'
      loop_control:
        loop_var: major_version


  handlers:
    - name: Wait for System Information
      panos_op:
        provider: '{{ provider }}'
        cmd: 'show system info'
      register: system_info
      until: system_info is not failed
      retries: 30
      delay: 60
      listen: reboot

    - name: Update System Info
      set_fact:
        system_info_json: "{{ system_info.stdout | from_json }}"
      listen: reboot

    - name: Update Software Version
      set_fact:
        sw_version: "{{ system_info_json.response.result.system['sw-version'] }}"
      listen: reboot

    - debug:
        msg: "Current software version is: {{ sw_version }}"
      listen: reboot
